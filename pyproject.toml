[tool.poetry]
name = "turing-test-service"
version = "0.1.0"
description = "Example project implementing a draft of a service that analyzes dialog and detects robots"
authors = ["Alexey Borisov <alex.borisov.ant@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "~3.12.0"
fastapi = "^0.115.0"
uvicorn = "^0.32.0"
pydantic = "^2.9"
numpy = "^1.26.4"
PyYAML = "^6.0.0"
tqdm = "*"
dvc = {extras = ["s3"], version = "^3.59.1"}
yandexcloud = "^0.337.0"
pandas = "^2.2.3"
scikit-learn = "^1.6.1"
pytest = "^8.3.5"
pytest-cov = "^6.0.0"
catboost = "^1.2.7"
nltk = "^3.9.1"
apache-airflow = "2.10"
apache-airflow-providers-amazon = "^9.6.1"
docker = "^7.1.0"
yc = "^1.0"
snap = "^0.5"
unzip = "^1.0.0"
mlflow = "^2.22.0"
dotenv = "^0.9.9"
redis = "^6.1.0"

[tool.poetry.group.dev.dependencies]
jupyter = "^1.1.1"
ruff = "^0.11.1"
ipdb = "^0.13.13"
isort = "^5.13.2"
mypy = "^1.13.0"
pre-commit = "^4.0.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.ruff]
line-length = 120
indent-width = 4

target-version = "py312"

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
]


[tool.ruff.lint]
select = ["ALL"]
ignore = ["D1", "COM812", "TRY003", "EM101"]
extend-ignore = ["D203", "D213"]

[tool.ruff.lint.per-file-ignores]
"tests/**.py" = ["S101", "ANN401"]


# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
# dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"


[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

